[{"uri":"/zh/actor/","title":"Actors","tags":[],"description":"","content":"章节 1 Actor模型 Actor模型是一种关于计算的数学模型，基于 Actors 的概念。在这种模型中，Actor是计算的基本单元，它体现为三件事：\n信息处理（计算） 存储（状态） 通信 Actors是模型中的基础且唯一的对象，一切都是Actor。系统不会只有一个actor，因为actor需要和其他actor通讯。 Actors的相互通讯是由一个actor向另一个Actor发送messager（message），messager也是一个Actor。message和messager是同一个概念。\nactor模型和纯面向对象编程之间有相似之处，即一切都是对象，发送消息，局部可变状态。\n但又一个重要的区别需要考虑：actor之间的边界是不可变的，也就是说，一个actor不能奖可修改的引用 传递给另一个actor，或者以某种方式修改另一个actor的状态。actor只能发送消息。\nactor是独立的实体，其模型不将它们限制为进程或线程，它们具有跨进程、管道、机器进行通信的能力。因此， 仅概括一下——OOP对行为和状态进行建模，而Actor模型对计算进行建模，并且是一种精确的、完整的、正式定义的理论，而不是OOP。\n向其发送messager的actor称为 target。因此，在这种计算模型中唯一的事件是“target接收到messager”。 事件是actor计算的持续历史中的离散步骤；它们是actor理论的基本交互。每个事件E都是由message(E)组成，被称为target(E) 的目标（接收者）接收。这些术语基于(Laws for Communicating Parallel Processes)[https://dspace.mit.edu/bitstream/handle/1721.1/41962/AI_WP_134A.pdf]\n收到消息后，目标 actor 通过向其他 actor 发送消息来揭示 行为。 Actor 可以由另一个 actor 创建，作为第二个 actor 行为的一部分。 事实上，几乎每个信使 actor（消息）都是在发送到目标 actor 之前新创建的。 对于每个 actor X，我们将要求有一个独特的事件 Birth(X) ，其中 X 首先出现。 更准确地说， Birth（X） 具有该性质，如果 X 是另一个事件 E 的参与者，则 Birth（X）→ E，其中→是事件的二元关系， 这意味着事件的部分排序。 形式上，它将是 Actor 模型中的激活顺序和事件到达顺序的并集的 传递闭包。\n每个 actor 都有 地址（address）。 在各种实现中，地址可以是直接物理地址，例如 NIC 的 MAC 地址、内存地址或仅仅是进程标识符 （PID）。 多个 actor 可以有相同的地址，一个 actor 可以有多个地址。 这里有一个 多对多 的关系。 地址 不是 actor 的唯一标识符。 Actor 没有身份，只有地址。 因此，当我们退后一步，看看我们的概念 Actor 模型时，我们只能看到并使用地址。 即使我们有一个地址，我们也无法判断我们是有一个 actor 还是有多个 actor ，因为这个地址可以是 actor 分组的代理。 我们对地址所能做的就是向它发送消息。 Address 代表 Actor 模型中的 能力。 地址和 actor 的映射不是概念 actor 模型的一部分，尽管它是实现的一个特征。\nActor 可以向自己发送消息（递归支持），他们将在以后的步骤中接收和处理这些消息。 此外，actor 可能 有一个邮箱（mailbox）。 邮箱（Mailbox） 是 actor（请记住： 一切都是 actor），它表示消息的目的地。 Actor 不需要邮箱，因为如果 Actor 需要有邮箱，那么邮箱将是一个需要拥有自己的邮箱的 Actor，我们最终会得到无限递归。\nActor模型中存在两个 局部性公理 ，包括 组织（Organisational） 和 操作（Operational）。\n组织（Organisational）: 响应收到的消息，Actor 只能：\n产生有限数量的新 actor。 仅将消息发送到刚刚收到的消息中的地址或其本地存储中的地址。 为下一条消息更新其本地存储（指定如何处理下一条消息） 组织（Organisational）： Actor 的本地存储包括的地址只能是：\n在创建时提供的 在消息中收到的 适用于此处创建的 Actors（操作公理的第 1 段） 从概念上讲，actor 按顺序处理来自其邮箱的传入消息，一次处理一个消息，但物理实现始终以某种方式优化或管道消息处理。 Actor 模型没有为消息传递和处理提供许多保证。 不同的物理实现可以自由地添加有趣的功能，例如消息模式匹配或 在 Erlang 中选择性接收 排队消息中不匹配的消息，以便以后处理和管理超时。\nActor 模型还支持 委派（delegation），因为 actor 可以在消息中发送其他 actor 的地址（在 Erlang 中，这些是 PID）。\n正如我之前已经提到的，Actor 可以向自己发送消息（递归），为了避免死锁，我们在 Actor 模型中有一个 future 的概念。 Future 的想法是，你可以创建一个 actor ，在它仍然在计算时得到结果。 Future 是一种特殊的消息类型，它表示（可能很长的）计算或事件（向目标发送消息的结果）的“未来（future）”值。 Actor 可以将 future 传递给其他 Actor，他们也可以将 future 发送给自己。 是的，这些与我们现在在 JavaScript 或 Scala 等主流编程语言中拥有的 future 相同。 Future 的概念于 1977 年首次出现在 Actor 模型中（Carl Hewitt 和 Baker 的“进程的增量垃圾收集”）。\n消息传递没有顺序保证，并且可以丢弃消息（例如，如果在发送信使之前 Actor 被销毁），因此我们有 尽最大努力的传递。 消息可以持久化（Actor 定义的第 2 段： storage）并且可以重新发送。 消息最多可以传递 一次（一次或零次）。 快速到达的消息可能会导致 actor 出现某种拒绝服务，从而使 actor 无法处理传入的消息流。 为了缓解这个问题，存在一个邮箱 actor 接收信使并持有这些信使，直到 actor 能够处理它们。 消息可能需要任意长的时间才能最终到达接收方的邮箱。 在 Actor 模型的物理实现中，邮箱中消息的入队和出队是原子操作，因此不可能出现争用情况。\nActor 具有自己的状态或存储这一事实意味着额外的期望要求，特别是 actor 应具有固有的持久性，除非不再可访问。 因此，Actor 系统应该根据它拥有的记录来恢复 Actor。 我们可以将此属性称为“actor 的存储持久性”。 这里的持久性是一个程度问题。 最低是记录在 RAM 中。 接下来是持久性本地存储（本地数据库服务器等）。 之后是其他机器上的存储，可以表示为由分布式数据库支持的复制日志（日志）。 此属性的一个有趣的物理实现是 Akka Persistence。 Akka persistence 使有状态的 Actor 能够持久化其内部状态，以便在 Actor 启动、JVM 崩溃后重新启动、由 supervisor 重新启动或在集群中迁移时恢复。 Akka 持久性背后的关键概念是，只保留对 actor 内部状态的更改，但从不直接保留其当前状态（可选快照除外）。\nActor 之间没有 channel 或任何其他类型的中介。 我们将消息 直接 发送给 actor 。 当然，我们可以通过带有“put”和“get”信使的 actor 来实现通道，但这根本不是必需的。\nActor 模型中的计算被认为是分布在空间中的，其中称为 Actor 的计算设备使用 Actor 的地址进行异步通信，并且整个计算不处于任何明确定义的状态。\nActor 的本地状态是在收到消息时定义的，在其他时间可能是不确定的。 使用 Actor 模型，您将拥有一个基于配置的计算模型。 该模型的基础是接收到的消息，其本质上是动态的，而不是固定的。\n您可能已经注意到，Actor 模型在设计和定义上都是可扩展的。 这种固有的可扩展性意味着，在不久的将来（根据 Hewitt 的 2025年可重用可扩展智能系统 ），我们可以在具有数百万个 Actor 内核的计算机盒子上观察到 Actor 模式的物理实现，平均10纳秒延迟消息在千万亿 Actor 之间传递。\n在 Actor 模型中还存在 仲裁者（Arbiter） 的概念。 仲裁者 为我们提供了 不确定性。 根据 Hewitt 的论文 Physical Indeterinacy in Digital Computation ，仲裁者实现了 actor 的不确定性。 通常，Actor 处理消息的顺序所观察到的细节会影响结果。 我们没有观察 Actor 计算仲裁过程的内部细节，而是等待结果。 仲裁者的不确定性会在 Actor 系统中产生不确定性。 这些仲裁者实际上类似于电子 仲裁者 。 给定一个仲裁者，您可以同时将多个输入（例如 Input1，Input2）输入仲裁者，但 只有 一个可能的结果（Output1或Exput2）将出现在另一端。 从概念上讲，仲裁者是某种具有逻辑门的电路，它可以基于 NAND逻辑 （例如XNOR，NAND和NOT）。 这些门需要合适的阈值和其他参数。\n在仲裁者启动后，它可以在最终断言 Output1 或 Output2 之前，在不受限制的时间段内保持 元稳定 状态。 但是仲裁者尚未决定的概率随着时间的推移呈指数下降。 仲裁者的内部流程不是公开流程，而是“黑匣子”。 试图观察它们会影响它们的结果。 我们必须等待结果，而不是观察仲裁过程的内部。\n仲裁者是一个非常方便和实用的理论框架，引入它是为了能够推理或描述当我们有多个消息发送给同一个 actor 时发生的事情。 抽象地，仲裁者本身“决定”传入消息的顺序。 然而，真实可感知世界的一个标志是单个抽象概念的各种物理 实例化 ，因此可能有很多仲裁者的实例或示例 - CPU时钟生成器，Linux内核计时器飞轮， CFS，由垃圾回收引起的不可预测的暂停， 操作系统级暂停以解决主要页面故障，无数 网络故障，CPU交叉调用和TLB关闭等等。\n我们可以将 Erlang VM 视为一个具体的示例。 Erlang 消息传递的语义指出，每当两个进程分别向第三个进程发送一条消息，并且对单个发送事件没有排序约束时，我们永远不能依赖哪条消息将首先出现在接收方的邮箱中。 即使所有进程都在同一个 Erlang VM 中运行，它们也可能被任意延迟。 如果发送方位于不同的调度程序线程上，则可能会发生这种情况。 发送操作可以按一个顺序（挂钟时间）完成，但消息仍可能以交换顺序到达接收者的邮箱。 如果我们运行分布式 Erlang，甚至会发生更多的事情。 例如，Actor 通过拥塞网络向不同子网中的另一个 Actor 发送消息，该网络遭受 TCP 或 BGP 故障。 揭穿一个潜在的误解——在 Erlang 中，消息排序只在一个进程中得到保证。 也就是说，如果有一个实时进程，我们向它发送一条消息A，然后发送一条消息B，那么可以保证如果消息B到达，消息A已经到达它之前。\n为了总结上述内容，我们可以假设 Actor 模型中的不确定性：\n由数字计算实现 可能涉及与外部 Actor 的通信 无限的不确定性：总是可以停止但需要无限的时间。 实际上，Actor Model 是一个非常抽象的概念模型，因此任何基于上述局部性公理的实现都是合理的。\n为了建立一个类比，我们可以假设 actor 模型类似于 范畴论 计算。 范畴理论也是抽象的、最小的，并且专注于对象之间的相互作用，例如态射、函子、自然变换、 变换 ，而不描述对象本身的性质和内部结构。\n我不擅长总结，因此我将用 Robin Milner 的“交互元素：图灵奖讲座”中的一句话来结束：\n现在，纯粹的 lambda 演算只用两种东西构建：术语和变量。 我们可以为过程演算实现相同的经济性吗？ Carl Hewitt 凭借他的 actor 模型，很久以前就应对了这一挑战。他声明值、值操作符和过程都应该是同一种东西：Actor。 这个目标给我留下了深刻的印象，因为它暗示了表达的同质性和完整性 … 问题：为什么actor模型可以提高并发性？\n"},{"uri":"/zh/cont/pages/","title":"Pages organization","tags":[],"description":"","content":"In Hugo, pages are the core of your site. Once it is configured, pages are definitely the added value to your documentation site.\nFolders Organize your site like any other Hugo project. Typically, you will have a content folder with all your pages.\ncontent ├── level-one │ ├── level-two │ │ ├── level-three │ │ │ ├── level-four │ │ │ │ ├── _index.md \u0026lt;-- /level-one/level-two/level-three/level-four │ │ │ │ ├── page-4-a.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-a │ │ │ │ ├── page-4-b.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-b │ │ │ │ └── page-4-c.md \u0026lt;-- /level-one/level-two/level-three/level-four/page-4-c │ │ │ ├── _index.md \u0026lt;-- /level-one/level-two/level-three │ │ │ ├── page-3-a.md \u0026lt;-- /level-one/level-two/level-three/page-3-a │ │ │ ├── page-3-b.md \u0026lt;-- /level-one/level-two/level-three/page-3-b │ │ │ └── page-3-c.md \u0026lt;-- /level-one/level-two/level-three/page-3-c │ │ ├── _index.md \u0026lt;-- /level-one/level-two │ │ ├── page-2-a.md \u0026lt;-- /level-one/level-two/page-2-a │ │ ├── page-2-b.md \u0026lt;-- /level-one/level-two/page-2-b │ │ └── page-2-c.md \u0026lt;-- /level-one/level-two/page-2-c │ ├── _index.md \u0026lt;-- /level-one │ ├── page-1-a.md \u0026lt;-- /level-one/page-1-a │ ├── page-1-b.md \u0026lt;-- /level-one/page-1-b │ └── page-1-c.md \u0026lt;-- /level-one/page-1-c ├── _index.md \u0026lt;-- / └── page-top.md \u0026lt;-- /page-top _index.md is required in each folder, it’s your “folder home page”\nTypes Hugo-theme-learn defines two types of pages. Default and Chapter. Both can be used at any level of the documentation, the only difference being layout display.\nA Chapter displays a page meant to be used as introduction for a set of child pages. Commonly, it contains a simple title and a catch line to define content that can be found under it. You can define any HTML as prefix for the menu. In the example below, it\u0026rsquo;s just a number but that could be an icon.\n+++ title = \u0026#34;Basics\u0026#34; chapter = true weight = 5 pre = \u0026#34;\u0026lt;b\u0026gt;1. \u0026lt;/b\u0026gt;\u0026#34; +++ ### Chapter 1 # Basics Discover what this Hugo theme is all about and the core-concepts behind it. To tell Hugo-theme-learn to consider a page as a chapter, set chapter=true in the Front Matter of the page.\nA Default page is any other content page.\n+++ title = \u0026#34;Installation\u0026#34; weight = 15 +++ The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you to train by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt; Hugo-theme-learn provides archetypes to help you create this kind of pages.\nFront Matter configuration Each Hugo page has to define a Front Matter in yaml, toml or json.\nHugo-theme-learn uses the following parameters on top of Hugo ones :\n+++ # Table of content (toc) is enabled by default. Set this parameter to true to disable it. # Note: Toc is always disabled for chapter pages disableToc = \u0026#34;false\u0026#34; # If set, this will be used for the page\u0026#39;s menu entry (instead of the `title` attribute) menuTitle = \u0026#34;\u0026#34; # The title of the page in menu will be prefixed by this HTML content pre = \u0026#34;\u0026#34; # The title of the page in menu will be postfixed by this HTML content post = \u0026#34;\u0026#34; # Set the page as a chapter, changing the way it\u0026#39;s displayed chapter = false # Hide a menu entry by setting this to true hidden = false # Display name of this page modifier. If set, it will be displayed in the footer. LastModifierDisplayName = \u0026#34;\u0026#34; # Email of this page modifier. If set with LastModifierDisplayName, it will be displayed in the footer LastModifierEmail = \u0026#34;\u0026#34; +++ Add icon to a menu entry In the page frontmatter, add a pre param to insert any HTML code before the menu label. The example below uses the Github icon.\n+++ title = \u0026#34;Github repo\u0026#34; pre = \u0026#34;\u0026lt;i class=\u0026#39;fab fa-github\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; \u0026#34; +++ Ordering sibling menu/page entries Hugo provides a flexible way to handle order for your pages.\nThe simplest way is to set weight parameter to a number.\n+++ title = \u0026#34;My page\u0026#34; weight = 5 +++ Using a custom title for menu entries By default, Hugo-theme-learn will use a page\u0026rsquo;s title attribute for the menu item (or linkTitle if defined).\nBut a page\u0026rsquo;s title has to be descriptive on its own while the menu is a hierarchy. We\u0026rsquo;ve added the menuTitle parameter for that purpose:\nFor example (for a page named content/install/linux.md):\n+++ title = \u0026#34;Install on Linux\u0026#34; menuTitle = \u0026#34;Linux\u0026#34; +++ Homepage To configure your home page, you basically have three choices:\nCreate an _index.md document in content folder and fill the file with Markdown content Create an index.html file in the static folder and fill the file with HTML content Configure your server to automatically redirect home page to one your documentation page "},{"uri":"/zh/basics/","title":"基础","tags":[],"description":"","content":"章节 1 基础 了解该 Hugo 主题的特点以及背后的核心概念。\n"},{"uri":"/zh/cont/","title":"Content","tags":[],"description":"","content":"Chapter 3 Content Find out how to create and organize your content quickly and intuitively.\n"},{"uri":"/zh/cont/archetypes/","title":"Archetypes","tags":[],"description":"","content":"Using the command: hugo new [relative new content path], you can start a content file with the date and title automatically set. While this is a welcome feature, active writers need more: archetypes.\nIt is pre-configured skeleton pages with default front matter. Please refer to the documentation for types of page to understand the differences.\nChapter To create a Chapter page, run the following commands\nhugo new --kind chapter \u0026lt;name\u0026gt;/_index.md It will create a page with predefined Front-Matter:\n+++ title = \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date = {{ .Date }} weight = 5 chapter = true pre = \u0026#34;\u0026lt;b\u0026gt;X. \u0026lt;/b\u0026gt;\u0026#34; +++ ### Chapter X # Some Chapter title Lorem Ipsum. Default To create a default page, run either one of the following commands\n# Either hugo new \u0026lt;chapter\u0026gt;/\u0026lt;name\u0026gt;/_index.md # Or hugo new \u0026lt;chapter\u0026gt;/\u0026lt;name\u0026gt;.md It will create a page with predefined Front-Matter:\n+++ title = \u0026#34;{{ replace .Name \u0026#34;-\u0026#34; \u0026#34; \u0026#34; | title }}\u0026#34; date = {{ .Date }} weight = 5 +++ Lorem Ipsum. "},{"uri":"/zh/basics/requirements/","title":"Requirements","tags":[],"description":"","content":"Thanks to the simplicity of Hugo, this page is as empty as this theme needs requirements.\nJust download latest version of Hugo binary (\u0026gt; 0.25) for your OS (Windows, Linux, Mac) : it\u0026rsquo;s that simple.\n"},{"uri":"/zh/cont/markdown/","title":"Markdown syntax","tags":[],"description":"","content":" This page is a shameful copy of the great Grav original page. Only difference is information about image customization (resizing, add CSS classes\u0026hellip;)\nLet\u0026rsquo;s face it: Writing content for the Web is tiresome. WYSIWYG editors help alleviate this task, but they generally result in horrible code, or worse yet, ugly web pages.\nMarkdown is a better way to write HTML, without all the complexities and ugliness that usually accompanies it.\nSome of the key benefits are:\nMarkdown is simple to learn, with minimal extra characters so it\u0026rsquo;s also quicker to write content. Less chance of errors when writing in markdown. Produces valid XHTML output. Keeps the content and the visual display separate, so you cannot mess up the look of your site. Write in any text editor or Markdown application you like. Markdown is a joy to use! John Gruber, the author of Markdown, puts it like this:\nThe overriding design goal for Markdown’s formatting syntax is to make it as readable as possible. The idea is that a Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. While Markdown’s syntax has been influenced by several existing text-to-HTML filters, the single biggest source of inspiration for Markdown’s syntax is the format of plain text email. \u0026ndash; John Gruber\nGrav ships with built-in support for Markdown and Markdown Extra. You must enable Markdown Extra in your system.yaml configuration file\nWithout further delay, let us go over the main elements of Markdown and what the resulting HTML looks like:\nBookmark this page for easy future reference!\nHeadings Headings from h1 through h6 are constructed with a # for each level:\n# h1 Heading ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading Renders to:\nh1 Heading h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading HTML:\n\u0026lt;h1\u0026gt;h1 Heading\u0026lt;/h1\u0026gt; \u0026lt;h2\u0026gt;h2 Heading\u0026lt;/h2\u0026gt; \u0026lt;h3\u0026gt;h3 Heading\u0026lt;/h3\u0026gt; \u0026lt;h4\u0026gt;h4 Heading\u0026lt;/h4\u0026gt; \u0026lt;h5\u0026gt;h5 Heading\u0026lt;/h5\u0026gt; \u0026lt;h6\u0026gt;h6 Heading\u0026lt;/h6\u0026gt; Comments Comments should be HTML compatible\n\u0026lt;!-- This is a comment --\u0026gt; Comment below should NOT be seen:\nHorizontal Rules The HTML \u0026lt;hr\u0026gt; element is for creating a \u0026ldquo;thematic break\u0026rdquo; between paragraph-level elements. In markdown, you can create a \u0026lt;hr\u0026gt; with any of the following:\n___: three consecutive underscores ---: three consecutive dashes ***: three consecutive asterisks renders to:\nBody Copy Body copy written as normal, plain text will be wrapped with \u0026lt;p\u0026gt;\u0026lt;/p\u0026gt; tags in the rendered HTML.\nSo this body copy:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. renders to this HTML:\n\u0026lt;p\u0026gt;Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u0026lt;/p\u0026gt; Emphasis Bold For emphasizing a snippet of text with a heavier font-weight.\nThe following snippet of text is rendered as bold text.\n**rendered as bold text** renders to:\nrendered as bold text\nand this HTML\n\u0026lt;strong\u0026gt;rendered as bold text\u0026lt;/strong\u0026gt; Italics For emphasizing a snippet of text with italics.\nThe following snippet of text is rendered as italicized text.\n_rendered as italicized text_ renders to:\nrendered as italicized text\nand this HTML:\n\u0026lt;em\u0026gt;rendered as italicized text\u0026lt;/em\u0026gt; Strikethrough In GFM (GitHub flavored Markdown) you can do strikethroughs.\n~~Strike through this text.~~ Which renders to:\nStrike through this text.\nHTML:\n\u0026lt;del\u0026gt;Strike through this text.\u0026lt;/del\u0026gt; Blockquotes For quoting blocks of content from another source within your document.\nAdd \u0026gt; before any text you want to quote.\n\u0026gt; **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. Renders to:\nFusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\nand this HTML:\n\u0026lt;blockquote\u0026gt; \u0026lt;p\u0026gt;\u0026lt;strong\u0026gt;Fusion Drive\u0026lt;/strong\u0026gt; combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined.\u0026lt;/p\u0026gt; \u0026lt;/blockquote\u0026gt; Blockquotes can also be nested:\n\u0026gt; Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u0026gt; \u0026gt; \u0026gt; Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. \u0026gt; \u0026gt; Mauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus. Renders to:\nDonec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi.\nSed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam.\nMauris sit amet ligula egestas, feugiat metus tincidunt, luctus libero. Donec congue finibus tempor. Vestibulum aliquet sollicitudin erat, ut aliquet purus posuere luctus.\nNotices The old mechanism for notices overriding the block quote syntax (\u0026gt;\u0026gt;\u0026gt;) has been deprecated. Notices are now handled via a dedicated plugin called Markdown Notices\nLists Unordered A list of items in which the order of the items does not explicitly matter.\nYou may use any of the following symbols to denote bullets for each list item:\n* valid bullet - valid bullet + valid bullet For example\n+ Lorem ipsum dolor sit amet + Consectetur adipiscing elit + Integer molestie lorem at massa + Facilisis in pretium nisl aliquet + Nulla volutpat aliquam velit - Phasellus iaculis neque - Purus sodales ultricies - Vestibulum laoreet porttitor sem - Ac tristique libero volutpat at + Faucibus porta lacus fringilla vel + Aenean sit amet erat nunc + Eget porttitor lorem Renders to:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem And this HTML\n\u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt;Phasellus iaculis neque\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Purus sodales ultricies\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Vestibulum laoreet porttitor sem\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Ac tristique libero volutpat at\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; \u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ul\u0026gt; Ordered A list of items in which the order of items does explicitly matter.\n1. Lorem ipsum dolor sit amet 4. Consectetur adipiscing elit 2. Integer molestie lorem at massa 8. Facilisis in pretium nisl aliquet 4. Nulla volutpat aliquam velit 99. Faucibus porta lacus fringilla vel 21. Aenean sit amet erat nunc 6. Eget porttitor lorem Renders to:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem And this HTML:\n\u0026lt;ol\u0026gt; \u0026lt;li\u0026gt;Lorem ipsum dolor sit amet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Consectetur adipiscing elit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Integer molestie lorem at massa\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Facilisis in pretium nisl aliquet\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Nulla volutpat aliquam velit\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Faucibus porta lacus fringilla vel\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Aenean sit amet erat nunc\u0026lt;/li\u0026gt; \u0026lt;li\u0026gt;Eget porttitor lorem\u0026lt;/li\u0026gt; \u0026lt;/ol\u0026gt; TIP: If you just use 1. for each number, Markdown will automatically number each item. For example:\n1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem Renders to:\nLorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem Code Inline code Wrap inline snippets of code with `.\nIn this example, `\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;` should be wrapped as **code**. Renders to:\nIn this example, \u0026lt;section\u0026gt;\u0026lt;/section\u0026gt; should be wrapped as code.\nHTML:\n\u0026lt;p\u0026gt;In this example, \u0026lt;code\u0026gt;\u0026amp;lt;section\u0026amp;gt;\u0026amp;lt;/section\u0026amp;gt;\u0026lt;/code\u0026gt; should be wrapped as \u0026lt;strong\u0026gt;code\u0026lt;/strong\u0026gt;.\u0026lt;/p\u0026gt; Indented code Or indent several lines of code by at least two spaces, as in:\n// Some comments line 1 of code line 2 of code line 3 of code Renders to:\n// Some comments line 1 of code line 2 of code line 3 of code HTML:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt; // Some comments line 1 of code line 2 of code line 3 of code \u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Block code \u0026ldquo;fences\u0026rdquo; Use \u0026ldquo;fences\u0026rdquo; ``` to block in multiple lines of code.\nSample text here... HTML:\n\u0026lt;pre\u0026gt; \u0026lt;code\u0026gt;Sample text here...\u0026lt;/code\u0026gt; \u0026lt;/pre\u0026gt; Syntax highlighting GFM, or \u0026ldquo;GitHub Flavored Markdown\u0026rdquo; also supports syntax highlighting. To activate it, simply add the file extension of the language you want to use directly after the first code \u0026ldquo;fence\u0026rdquo;, ```js, and syntax highlighting will automatically be applied in the rendered HTML.\nSee Code Highlighting for additional documentation.\nFor example, to apply syntax highlighting to JavaScript code:\n```js grunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; ``` Renders to:\ngrunt.initConfig({ assemble: { options: { assets: \u0026#39;docs/assets\u0026#39;, data: \u0026#39;src/data/*.{json,yml}\u0026#39;, helpers: \u0026#39;src/custom-helpers.js\u0026#39;, partials: [\u0026#39;src/partials/**/*.{hbs,md}\u0026#39;] }, pages: { options: { layout: \u0026#39;default.hbs\u0026#39; }, files: { \u0026#39;./\u0026#39;: [\u0026#39;src/templates/pages/index.hbs\u0026#39;] } } } }; Tables Tables are created by adding pipes as dividers between each cell, and by adding a line of dashes (also separated by bars) beneath the header. Note that the pipes do not need to be vertically aligned.\n| Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Renders to:\nOption Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. And this HTML:\n\u0026lt;table\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Option\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Description\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;data\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;path to data files to supply the data that will be passed into templates.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;engine\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;engine to be used for processing templates. Handlebars is the default.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;ext\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;extension to be used for dest files.\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/table\u0026gt; Right aligned text Adding a colon on the right side of the dashes below any heading will right align text for that column.\n| Option | Description | | ------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. Links Basic link [Assemble](http://assemble.io) Renders to (hover over the link, there is no tooltip):\nAssemble\nHTML:\n\u0026lt;a href=\u0026#34;http://assemble.io\u0026#34;\u0026gt;Assemble\u0026lt;/a\u0026gt; Add a tooltip [Upstage](https://github.com/upstage/ \u0026#34;Visit Upstage!\u0026#34;) Renders to (hover over the link, there should be a tooltip):\nUpstage\nHTML:\n\u0026lt;a href=\u0026#34;https://github.com/upstage/\u0026#34; title=\u0026#34;Visit Upstage!\u0026#34;\u0026gt;Upstage\u0026lt;/a\u0026gt; Named Anchors Named anchors enable you to jump to the specified anchor point on the same page. For example, each of these chapters:\n# Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) will jump to these sections:\n## Chapter 1 \u0026lt;a id=\u0026#34;chapter-1\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 2 \u0026lt;a id=\u0026#34;chapter-2\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. ## Chapter 3 \u0026lt;a id=\u0026#34;chapter-3\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; Content for chapter one. NOTE that specific placement of the anchor tag seems to be arbitrary. They are placed inline here since it seems to be unobtrusive, and it works.\nImages Images have a similar syntax to links but include a preceding exclamation point.\n![Minion](https://octodex.github.com/images/minion.png) or\n![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \u0026#34;The Stormtroopocat\u0026#34;) Like links, Images also have a footnote style syntax\nAlternative usage : note images ![Alt text][id] With a reference later in the document defining the URL location:\n[id]: https://octodex.github.com/images/dojocat.jpg \u0026quot;The Dojocat\u0026quot; Resizing image Add HTTP parameters width and/or height to the link image to resize the image. Values are CSS values (default is auto).\n![Minion](https://octodex.github.com/images/minion.png?width=20pc) ![Minion](https://octodex.github.com/images/minion.png?height=50px) ![Minion](https://octodex.github.com/images/minion.png?height=50px\u0026amp;width=300px) Add CSS classes Add a HTTP classes parameter to the link image to add CSS classes. shadowand border are available but you could define other ones.\n![stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg?classes=shadow) ![stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg?classes=border) ![stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg?classes=border,shadow) Lightbox Add a HTTP featherlight parameter to the link image to disable lightbox. By default lightbox is enabled using the featherlight.js plugin. You can disable this by defining featherlight to false.\n![Minion](https://octodex.github.com/images/minion.png?featherlight=false) "},{"uri":"/zh/shortcodes/","title":"Shortcodes","tags":[],"description":"","content":"Hugo uses Markdown for its simple content format. However, there are a lot of things that Markdown doesn’t support well. You could use pure HTML to expand possibilities.\nBut this happens to be a bad idea. Everyone uses Markdown because it\u0026rsquo;s pure and simple to read even non-rendered. You should avoid HTML to keep it as simple as possible.\nTo avoid this limitations, Hugo created shortcodes. A shortcode is a simple snippet inside a page.\nHugo-theme-learn provides multiple shortcodes on top of existing ones.\nAttachments The Attachments shortcode displays a list of files attached to a page.\nButton Nice buttons on your page.\nChildren List the child pages of a page\nExpand Displays an expandable/collapsible section of text on your page\nMermaid Generation of diagram and flowchart from text in a similar manner as markdown\nNotice Disclaimers to help you structure your page\nSite param Get value of site params variables in your page.\nTabbed views Synchronize selection of content in different tabbed views\n"},{"uri":"/zh/basics/installation/","title":"Installation","tags":[],"description":"","content":"The following steps are here to help you initialize your new website. If you don\u0026rsquo;t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners.\nCreate your project Hugo provides a new command to create a new website.\nhugo new site \u0026lt;new_project\u0026gt; Install the theme Install the Hugo-theme-learn theme by following this documentation\nThis theme\u0026rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git\nAlternatively, you can download the theme as .zip file and extract it in the themes directory\nBasic configuration When building the website, you can set a theme by using --theme option. However, we suggest you modify the configuration file (config.toml) and set the theme as the default. You can also add the [outputs] section to enable the search functionality.\n# Change the default theme to be use when building the site with Hugo theme = \u0026#34;hugo-theme-learn\u0026#34; # For search functionality [outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Create your first chapter page Chapters are pages that contain other child pages. It has a special layout style and usually just contains a chapter name, the title and a brief abstract of the section.\n### Chapter 1 # Basics Discover what this Hugo theme is all about and the core concepts behind it. renders as\nHugo-theme-learn provides archetypes to create skeletons for your website. Begin by creating your first chapter page with the following command\nhugo new --kind chapter basics/_index.md By opening the given file, you should see the property chapter=true on top, meaning this page is a chapter.\nBy default all chapters and pages are created as a draft. If you want to render these pages, remove the property draft: true from the metadata.\nCreate your first content pages Then, create content pages inside the previously created chapter. Here are two ways to create content in the chapter:\nhugo new basics/first-content.md hugo new basics/second-content/_index.md Feel free to edit thoses files by adding some sample content and replacing the title value in the beginning of the files.\nLaunching the website locally Launch by using the following command:\nhugo serve Go to http://localhost:1313\nYou should notice three things:\nYou have a left-side Basics menu, containing two submenus with names equal to the title properties in the previously created files. The home page explains how to customize it by following the instructions. When you run hugo serve, when the contents of the files change, the page automatically refreshes with the changes. Neat! Build the website When your site is ready to deploy, run the following command:\nhugo A public folder will be generated, containing all static content and assets for your website. It can now be deployed on any web server.\nThis website can be automatically published and hosted with Netlify (Read more about Automated HUGO deployments with Netlify). Alternatively, you can use Github pages\n"},{"uri":"/zh/cont/syntaxhighlight/","title":"Code highlighting","tags":[],"description":"","content":"Learn theme uses highlight.js to provide code syntax highlighting.\nMarkdown syntax Wrap the code block with three backticks and the name of the language. Highlight will try to auto detect the language if one is not provided.\n```json [ { \u0026#34;title\u0026#34;: \u0026#34;apples\u0026#34;, \u0026#34;count\u0026#34;: [12000, 20000], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} }, { \u0026#34;title\u0026#34;: \u0026#34;oranges\u0026#34;, \u0026#34;count\u0026#34;: [17500, null], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} } ] ``` Renders to:\n[ { \u0026#34;title\u0026#34;: \u0026#34;apples\u0026#34;, \u0026#34;count\u0026#34;: [12000, 20000], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} }, { \u0026#34;title\u0026#34;: \u0026#34;oranges\u0026#34;, \u0026#34;count\u0026#34;: [17500, null], \u0026#34;description\u0026#34;: {\u0026#34;text\u0026#34;: \u0026#34;...\u0026#34;, \u0026#34;sensitive\u0026#34;: false} } ] Supported languages Learn theme ships with its own version of highlight.js to support offline browsing. The included package supports 38 common languages, as described on the highlight.js download page.\nIdentifying failed language detection Highlight will write a warning to the browser console if a requested language was not found. For example, the following code block references an imaginary language foo. An error will be output to the console on this page.\n```foo bar ``` Could not find the language \u0026#39;foo\u0026#39;, did you forget to load/include a language module?(anonymous) @ highlight.pack.js Supporting additional languages To support languages other than the 38 common languages included in the default highlight.js you will need to download your own version of highlight.js and add it to your site content.\nDownload custom highlight.js Visit https://highlightjs.org/download/ and select your desired language support. Note that more languages means greater package size.\nAdd custom highlight.js to static resources Inside the zip archive downloaded from highlight.js extract the file named highlight.pack.js. Move this file to the new location\nstatic/js/highlight.pack.js Do not replace the existing file at themes/hugo-theme-learn/static/js/highlight.pack.js.\nIncluding the file in the correct path will override the theme default highlight.pack.js and prevent issues caused in the future if the theme default file is updated.\nFurther usage information See https://highlightjs.org/usage/\n"},{"uri":"/zh/basics/configuration/","title":"Configuration","tags":[],"description":"","content":"Global site parameters On top of Hugo global configuration, Hugo-theme-learn lets you define the following parameters in your config.toml (here, values are default).\nNote that some of these parameters are explained in details in other sections of this documentation.\n[params] # Prefix URL to edit current page. Will display an \u0026#34;Edit this page\u0026#34; button on top right hand corner of every page. # Useful to give opportunity to people to create merge request for your doc. # See the config.toml file from this documentation site to have an example. editURL = \u0026#34;\u0026#34; # Author of the site, will be used in meta information author = \u0026#34;\u0026#34; # Description of the site, will be used in meta information description = \u0026#34;\u0026#34; # Shows a checkmark for visited pages on the menu showVisitedLinks = false # Disable search function. It will hide search bar disableSearch = false # Javascript and CSS cache are automatically busted when new version of site is generated. # Set this to true to disable this behavior (some proxies don\u0026#39;t handle well this optimization) disableAssetsBusting = false # Set this to true to disable copy-to-clipboard button for inline code. disableInlineCopyToClipBoard = false # A title for shortcuts in menu is set by default. Set this to true to disable it. disableShortcutsTitle = false # If set to false, a Home button will appear below the search bar on the menu. # It is redirecting to the landing page of the current language if specified. (Default is \u0026#34;/\u0026#34;) disableLandingPageButton = true # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = false # Hide breadcrumbs in the header and only show the current page title disableBreadcrumb = true # If set to true, prevents Hugo from including the mermaid module if not needed (will reduce load times and traffic) disableMermaid = false # Specifies the remote location of the mermaid js customMermaidURL = \u0026#34;https://unpkg.com/mermaid@8.8.0/dist/mermaid.min.js\u0026#34; # Hide Next and Previous page buttons normally displayed full height beside content disableNextPrev = true # Order sections in menu by \u0026#34;weight\u0026#34; or \u0026#34;title\u0026#34;. Default to \u0026#34;weight\u0026#34; ordersectionsby = \u0026#34;weight\u0026#34; # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;\u0026#34; # Provide a list of custom css files to load relative from the `static/` folder in the site root. custom_css = [\u0026#34;css/foo.css\u0026#34;, \u0026#34;css/bar.css\u0026#34;] # Change the title separator. Default to \u0026#34;::\u0026#34;. titleSeparator = \u0026#34;-\u0026#34; Activate search If not already present, add the follow lines in the same config.toml file.\n[outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] Learn theme uses the last improvement available in hugo version 20+ to generate a json index file ready to be consumed by lunr.js javascript search engine.\nHugo generate lunrjs index.json at the root of public folder. When you build the site with hugo server, hugo generates it internally and of course it doesn’t show up in the filesystem\nMermaid The mermaid configuration parameters can also be set on a specific page. In this case, the global parameter would be overwritten by the local one.\nExample:\nMermaid is globally disabled. By default it won\u0026rsquo;t be loaded by any page.\nOn page \u0026ldquo;Architecture\u0026rdquo; you need a class diagram. You can set the mermaid parameters locally to only load mermaid on this page (not on the others).\nYou also can disable mermaid for specific pages while globally enabled.\nHome Button Configuration If the disableLandingPage option is set to false, an Home button will appear on the left menu. It is an alternative for clicking on the logo. To edit the appearance, you will have to configure two parameters for the defined languages:\n[Lanugages] [Lanugages.en] ... landingPageURL = \u0026#34;/en\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Redirect to Home\u0026#34; ... [Lanugages.fr] ... landingPageURL = \u0026#34;/fr\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Accueil\u0026#34; ... If those params are not configured for a specific language, they will get their default values:\nlandingPageURL = \u0026#34;/\u0026#34; landingPageName = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-home\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Home\u0026#34; The home button is going to looks like this:\n"},{"uri":"/zh/cont/menushortcuts/","title":"Menu extra shortcuts","tags":[],"description":"","content":"You can define additional menu entries or shortcuts in the navigation menu without any link to content.\nBasic configuration Edit the website configuration config.toml and add a [[menu.shortcuts]] entry for each link your want to add.\nExample from the current website:\n[[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fab fa-github'\u0026gt;\u0026lt;/i\u0026gt; Github repo\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Showcases\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Hugo Documentation\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Credits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30 By default, shortcuts are preceded by a title. This title can be disabled by setting disableShortcutsTitle=true. However, if you want to keep the title but change its value, it can be overriden by changing your local i18n translation string configuration.\nFor example, in your local i18n/en.toml file, add the following content\n[Shortcuts-Title] other = \u0026quot;\u0026lt;Your value\u0026gt;\u0026quot; Read more about hugo menu and hugo i18n translation strings\nConfiguration for Multilingual mode When using a multilingual website, you can set different menus for each language. In the config.toml file, prefix your menu configuration by Languages.\u0026lt;language-id\u0026gt;.\nExample from the current website:\n[Languages] [Languages.en] title = \u0026quot;Documentation for Hugo Learn Theme\u0026quot; weight = 1 languageName = \u0026quot;English\u0026quot; [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fab fa-github'\u0026gt;\u0026lt;/i\u0026gt; Github repo\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Showcases\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Hugo Documentation\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[Languages.en.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Credits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30 [Languages.fr] title = \u0026quot;Documentation du thème Hugo Learn\u0026quot; weight = 2 languageName = \u0026quot;Français\u0026quot; [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fab fa-github'\u0026gt;\u0026lt;/i\u0026gt; Repo Github\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-camera'\u0026gt;\u0026lt;/i\u0026gt; Vitrine\u0026quot; url = \u0026quot;/showcase\u0026quot; weight = 11 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bookmark'\u0026gt;\u0026lt;/i\u0026gt; Documentation Hugo\u0026quot; identifier = \u0026quot;hugodoc\u0026quot; url = \u0026quot;https://gohugo.io/\u0026quot; weight = 20 [[Languages.fr.menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fas fa-bullhorn'\u0026gt;\u0026lt;/i\u0026gt; Crédits\u0026quot; url = \u0026quot;/credits\u0026quot; weight = 30 Read more about hugo menu and hugo multilingual menus\n"},{"uri":"/zh/basics/style-customization/","title":"Style customization","tags":[],"description":"","content":"Hugo-theme-learn has been built to be as configurable as possible by defining multiple partials\nIn themes/hugo-theme-learn/layouts/partials/, you will find all the partials defined for this theme. If you need to overwrite something, don\u0026rsquo;t change the code directly. Instead follow this page. You\u0026rsquo;d create a new partial in the layouts/partials folder of your local project. This partial will have the priority.\nThis theme defines the following partials :\nheader: the header of the content page (contains the breadcrumbs). Not meant to be overwritten custom-header: custom headers in page. Meant to be overwritten when adding CSS imports. Don\u0026rsquo;t forget to include style HTML tag directive in your file footer: the footer of the content page (contains the arrows). Not meant to be overwritten custom-footer: custom footer in page. Meant to be overwritten when adding Javacript. Don\u0026rsquo;t forget to include javascript HTML tag directive in your file favicon: the favicon logo: the logo, on top left hand corner. meta: HTML meta tags, if you want to change default behavior menu: left menu. Not meant to be overwritten menu-footer: footer of the the left menu search: search box toc: table of contents Change the logo Create a new file in layouts/partials/ named logo.html. Then write any HTML you want. You could use an img HTML tag and reference an image created under the static folder, or you could paste a SVG definition !\nThe size of the logo will adapt automatically\nChange the favicon If your favicon is a png, just drop off your image in your local static/images/ folder and name it favicon.png\nIf you need to change this default behavior, create a new file in layouts/partials/ named favicon.html. Then write something like this:\n\u0026lt;link rel=\u0026#34;shortcut icon\u0026#34; href=\u0026#34;/images/favicon.png\u0026#34; type=\u0026#34;image/x-icon\u0026#34; /\u0026gt; Change default colors Hugo Learn theme let you choose between 3 native color scheme variants, but feel free to add one yourself ! Default color scheme is based on Grav Learn Theme.\nRed variant [params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;red\u0026#34; Blue variant [params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;blue\u0026#34; Green variant [params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;green\u0026#34; \u0026lsquo;Yours‘ variant First, create a new CSS file in your local static/css folder prefixed by theme (e.g. with mine theme static/css/theme-mine.css). Copy the following content and modify colors in CSS variables.\n:root{ --MAIN-TEXT-color:#323232; /* Color of text by default */ --MAIN-TITLES-TEXT-color: #5e5e5e; /* Color of titles h2-h3-h4-h5 */ --MAIN-LINK-color:#1C90F3; /* Color of links */ --MAIN-LINK-HOVER-color:#167ad0; /* Color of hovered links */ --MAIN-ANCHOR-color: #1C90F3; /* color of anchors on titles */ --MENU-HEADER-BG-color:#1C90F3; /* Background color of menu header */ --MENU-HEADER-BORDER-color:#33a1ff; /*Color of menu header border */ --MENU-SEARCH-BG-color:#167ad0; /* Search field background color (by default borders + icons) */ --MENU-SEARCH-BOX-color: #33a1ff; /* Override search field border color */ --MENU-SEARCH-BOX-ICONS-color: #a1d2fd; /* Override search field icons color */ --MENU-SECTIONS-ACTIVE-BG-color:#20272b; /* Background color of the active section and its childs */ --MENU-SECTIONS-BG-color:#252c31; /* Background color of other sections */ --MENU-SECTIONS-LINK-color: #ccc; /* Color of links in menu */ --MENU-SECTIONS-LINK-HOVER-color: #e6e6e6; /* Color of links in menu, when hovered */ --MENU-SECTION-ACTIVE-CATEGORY-color: #777; /* Color of active category text */ --MENU-SECTION-ACTIVE-CATEGORY-BG-color: #fff; /* Color of background for the active category (only) */ --MENU-VISITED-color: #33a1ff; /* Color of \u0026#39;page visited\u0026#39; icons in menu */ --MENU-SECTION-HR-color: #20272b; /* Color of \u0026lt;hr\u0026gt; separator in menu */ } body { color: var(--MAIN-TEXT-color) !important; } textarea:focus, input[type=\u0026#34;email\u0026#34;]:focus, input[type=\u0026#34;number\u0026#34;]:focus, input[type=\u0026#34;password\u0026#34;]:focus, input[type=\u0026#34;search\u0026#34;]:focus, input[type=\u0026#34;tel\u0026#34;]:focus, input[type=\u0026#34;text\u0026#34;]:focus, input[type=\u0026#34;url\u0026#34;]:focus, input[type=\u0026#34;color\u0026#34;]:focus, input[type=\u0026#34;date\u0026#34;]:focus, input[type=\u0026#34;datetime\u0026#34;]:focus, input[type=\u0026#34;datetime-local\u0026#34;]:focus, input[type=\u0026#34;month\u0026#34;]:focus, input[type=\u0026#34;time\u0026#34;]:focus, input[type=\u0026#34;week\u0026#34;]:focus, select[multiple=multiple]:focus { border-color: none; box-shadow: none; } h2, h3, h4, h5 { color: var(--MAIN-TITLES-TEXT-color) !important; } a { color: var(--MAIN-LINK-color); } .anchor { color: var(--MAIN-ANCHOR-color); } a:hover { color: var(--MAIN-LINK-HOVER-color); } #sidebar ul li.visited \u0026gt; a .read-icon { color: var(--MENU-VISITED-color); } #body a.highlight:after { display: block; content: \u0026#34;\u0026#34;; height: 1px; width: 0%; -webkit-transition: width 0.5s ease; -moz-transition: width 0.5s ease; -ms-transition: width 0.5s ease; transition: width 0.5s ease; background-color: var(--MAIN-LINK-HOVER-color); } #sidebar { background-color: var(--MENU-SECTIONS-BG-color); } #sidebar #header-wrapper { background: var(--MENU-HEADER-BG-color); color: var(--MENU-SEARCH-BOX-color); border-color: var(--MENU-HEADER-BORDER-color); } #sidebar .searchbox { border-color: var(--MENU-SEARCH-BOX-color); background: var(--MENU-SEARCH-BG-color); } #sidebar ul.topics \u0026gt; li.parent, #sidebar ul.topics \u0026gt; li.active { background: var(--MENU-SECTIONS-ACTIVE-BG-color); } #sidebar .searchbox * { color: var(--MENU-SEARCH-BOX-ICONS-color); } #sidebar a { color: var(--MENU-SECTIONS-LINK-color); } #sidebar a:hover { color: var(--MENU-SECTIONS-LINK-HOVER-color); } #sidebar ul li.active \u0026gt; a { background: var(--MENU-SECTION-ACTIVE-CATEGORY-BG-color); color: var(--MENU-SECTION-ACTIVE-CATEGORY-color) !important; } #sidebar hr { border-color: var(--MENU-SECTION-HR-color); } Then, set the themeVariant value with the name of your custom theme file. That\u0026rsquo;s it !\n[params] # Change default color scheme with a variant one. Can be \u0026#34;red\u0026#34;, \u0026#34;blue\u0026#34;, \u0026#34;green\u0026#34;. themeVariant = \u0026#34;mine\u0026#34; "},{"uri":"/zh/cont/icons/","title":"Icons and logos","tags":[],"description":"","content":"The Learn theme for Hugo loads the Font Awesome library, allowing you to easily display any icon or logo available in the Font Awesome free collection.\nFinding an icon Browse through the available icons in the Font Awesome Gallery. Notice that the free filter is enabled, as only the free icons are available by default.\nOnce on the Font Awesome page for a specific icon, for example the page for the heart, copy the HTML reference and paste into the markdown content.\nThe HTML to include the heart icon is:\n\u0026lt;i class=\u0026#34;fas fa-heart\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; Including in markdown Paste the \u0026lt;i\u0026gt; HTML into markup and Font Awesome will load the relevant icon.\nBuilt with \u0026lt;i class=\u0026#34;fas fa-heart\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; from Grav and Hugo Which appears as\nBuilt with from Grav and Hugo\nCustomising icons Font Awesome provides many ways to modify the icon\nChange colour (by default the icon will inherit the parent colour) Increase or decrease size Rotate Combine with other icons Check the full documentation on web fonts with CSS for more.\n"},{"uri":"/zh/cont/i18n/","title":"Multilingual and i18n","tags":[],"description":"","content":"Learn theme is fully compatible with Hugo multilingual mode.\nIt provides:\nTranslation strings for default values (English and French). Feel free to contribute ! Automatic menu generation from multilingual content In-browser language switching Basic configuration After learning how Hugo handle multilingual websites, define your languages in your config.toml file.\nFor example with current French and English website.\n# English is the default language defaultContentLanguage = \u0026#34;en\u0026#34; # Force to have /en/my-page and /fr/my-page routes, even for default language. defaultContentLanguageInSubdir= true [Languages] [Languages.en] title = \u0026#34;Documentation for Hugo Learn Theme\u0026#34; weight = 1 languageName = \u0026#34;English\u0026#34; [Languages.fr] title = \u0026#34;Documentation du thème Hugo Learn\u0026#34; weight = 2 languageName = \u0026#34;Français\u0026#34; Then, for each new page, append the id of the language to the file.\nSingle file my-page.md is split in two files: in English: my-page.en.md in French: my-page.fr.md Single file _index.md is split in two files: in English: _index.en.md in French: _index.fr.md Be aware that only translated pages are displayed in menu. It\u0026rsquo;s not replaced with default language content.\nUse slug Front Matter parameter to translate urls too.\nOverwrite translation strings Translations strings are used for common default values used in the theme (Edit this page button, Search placeholder and so on). Translations are available in french and english but you may use another language or want to override default values.\nTo override these values, create a new file in your local i18n folder i18n/\u0026lt;idlanguage\u0026gt;.toml and inspire yourself from the theme themes/hugo-theme-learn/i18n/en.toml\nBy the way, as these translations could be used by other people, please take the time to propose a translation by making a PR to the theme !\nDisable language switching Switching the language in the browser is a great feature, but for some reasons you may want to disable it.\nJust set disableLanguageSwitchingButton=true in your config.toml\n[params] # When using mulitlingual website, disable the switch language button. disableLanguageSwitchingButton = true "},{"uri":"/zh/cont/tags/","title":"Tags","tags":["documentation","tutorial"],"description":"","content":"Learn theme support one default taxonomy of gohugo: the tag feature.\nConfiguration Just add tags to any page:\n--- date: 2018-11-29T08:41:44+01:00 title: Theme tutorial weight: 15 tags: [\u0026#34;tutorial\u0026#34;, \u0026#34;theme\u0026#34;] --- Behavior The tags are displayed at the top of the page, in their insertion order.\nEach tag is a link to a Taxonomy page displaying all the articles with the given tag.\nList all the tags In the config.toml file you can add a shortcut to display all the tags\n[[menu.shortcuts]] name = \u0026#34;\u0026lt;i class=\u0026#39;fas fa-tags\u0026#39;\u0026gt;\u0026lt;/i\u0026gt; Tags\u0026#34; url = \u0026#34;/tags\u0026#34; weight = 30 "},{"uri":"/zh/","title":"Learn Theme for Hugo","tags":[],"description":"","content":"Hugo learn theme Hugo-theme-learn is a theme for Hugo, a fast and modern static website engine written in Go. Where Hugo is often used for blogs, this multilingual-ready theme is fully designed for documentation.\nThis theme is a partial porting of the Learn theme of Grav, a modern flat-file CMS written in PHP.\nLearn theme works with a page tree structure to organize content : All contents are pages, which belong to other pages. read more about this\nMain features Automatic Search Multilingual mode Unlimited menu levels Automatic next/prev buttons to navigate through menu entries Image resizing, shadow\u0026hellip; Attachments files List child pages Mermaid diagram (flowchart, sequence, gantt) Customizable look and feel and themes variants Buttons, Tip/Note/Info/Warning boxes, Expand Contribute to this documentation Feel free to update this content, just click the Edit this page link displayed on top right of each page, and pullrequest it\nYour modification will be deployed automatically when merged.\nDocumentation website This current documentation has been statically generated with Hugo with a simple command : hugo -t hugo-theme-learn \u0026ndash; source code is available here at GitHub\nAutomatically published and hosted thanks to Netlify. Read more about Automated HUGO deployments with Netlify\n"},{"uri":"/zh/tags/documentation/","title":"documentation","tags":[],"description":"","content":""},{"uri":"/zh/tags/","title":"Tags","tags":[],"description":"","content":""},{"uri":"/zh/tags/tutorial/","title":"tutorial","tags":[],"description":"","content":""},{"uri":"/zh/actor/","title":"Actor","tags":[],"description":"","content":""},{"uri":"/zh/shortcodes/attachments/","title":"Attachments","tags":[],"description":"The Attachments shortcode displays a list of files attached to a page.","content":"The Attachments shortcode displays a list of files attached to a page.\nBachGavotteShort.mp3 (357 ) Carroll_AliceAuPaysDesMerveilles.pdf (175 ) adivorciarsetoca00cape.pdf (361 ) hugo.png (17 ) movieselectricsheep-flock-244-32500-2.mp4 (340 ) small_file.txt (48 ) Usage The shortcurt lists files found in a specific folder. Currently, it support two implementations for pages\nIf your page is a markdown file, attachements must be placed in a folder named like your page and ending with .files.\ncontent _index.md page.files attachment.pdf page.md If your page is a folder, attachements must be placed in a nested \u0026lsquo;files\u0026rsquo; folder.\ncontent _index.md page index.md files attachment.pdf Be aware that if you use a multilingual website, you will need to have as many folders as languages.\nThat\u0026rsquo;s all!\nParameters Parameter Default Description title \u0026ldquo;Attachments\u0026rdquo; List\u0026rsquo;s title style \u0026quot;\u0026quot; Choose between \u0026ldquo;orange\u0026rdquo;, \u0026ldquo;grey\u0026rdquo;, \u0026ldquo;blue\u0026rdquo; and \u0026ldquo;green\u0026rdquo; for nice style pattern \u0026ldquo;.*\u0026rdquo; A regular expression, used to filter the attachments by file name. The pattern parameter value must be a regular expression. For example:\nTo match a file suffix of \u0026lsquo;.jpg\u0026rsquo;, use .*\\.jpg$ (not *.jpg). To match file names ending in \u0026lsquo;.jpg\u0026rsquo; or \u0026lsquo;.png\u0026rsquo;, use .*\\.(jpg|png)$. Examples List of attachments ending in pdf or mp4 {{%attachments title=\u0026quot;Related files\u0026quot; pattern=\u0026quot;.*\\.(pdf|mp4)$\u0026quot;/%}} renders as\nRelated files Carroll_AliceAuPaysDesMerveilles.pdf (175 ) adivorciarsetoca00cape.pdf (361 ) movieselectricsheep-flock-244-32500-2.mp4 (340 ) Colored styled box {{%attachments style=\u0026quot;orange\u0026quot; /%}} renders as\nBachGavotteShort.mp3 (357 ) Carroll_AliceAuPaysDesMerveilles.pdf (175 ) adivorciarsetoca00cape.pdf (361 ) hugo.png (17 ) movieselectricsheep-flock-244-32500-2.mp4 (340 ) small_file.txt (48 ) {{%attachments style=\u0026quot;grey\u0026quot; /%}} renders as\nBachGavotteShort.mp3 (357 ) Carroll_AliceAuPaysDesMerveilles.pdf (175 ) adivorciarsetoca00cape.pdf (361 ) hugo.png (17 ) movieselectricsheep-flock-244-32500-2.mp4 (340 ) small_file.txt (48 ) {{%attachments style=\u0026quot;blue\u0026quot; /%}} renders as\nBachGavotteShort.mp3 (357 ) Carroll_AliceAuPaysDesMerveilles.pdf (175 ) adivorciarsetoca00cape.pdf (361 ) hugo.png (17 ) movieselectricsheep-flock-244-32500-2.mp4 (340 ) small_file.txt (48 ) {{%attachments style=\u0026quot;green\u0026quot; /%}} renders as\nBachGavotteShort.mp3 (357 ) Carroll_AliceAuPaysDesMerveilles.pdf (175 ) adivorciarsetoca00cape.pdf (361 ) hugo.png (17 ) movieselectricsheep-flock-244-32500-2.mp4 (340 ) small_file.txt (48 ) "},{"uri":"/zh/shortcodes/button/","title":"Button","tags":[],"description":"Nice buttons on your page.","content":"A button is a just a clickable button with optional icon.\n{{% button href=\u0026#34;https://getgrav.org/\u0026#34; %}}Get Grav{{% /button %}} {{% button href=\u0026#34;https://getgrav.org/\u0026#34; icon=\u0026#34;fas fa-download\u0026#34; %}}Get Grav with icon{{% /button %}} {{% button href=\u0026#34;https://getgrav.org/\u0026#34; icon=\u0026#34;fas fa-download\u0026#34; icon-position=\u0026#34;right\u0026#34; %}}Get Grav with icon right{{% /button %}} Get Grav Get Grav with icon Get Grav with icon right "},{"uri":"/zh/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"/zh/shortcodes/children/","title":"Children","tags":[],"description":"List the child pages of a page","content":"Use the children shortcode to list the child pages of a page and the further descendants (children\u0026rsquo;s children). By default, the shortcode displays links to the child pages.\nUsage Parameter Default Description page current Specify the page name (section name) to display children for style \u0026ldquo;li\u0026rdquo; Choose the style used to display descendants. It could be any HTML tag name showhidden \u0026ldquo;false\u0026rdquo; When true, child pages hidden from the menu will be displayed description \u0026ldquo;false\u0026rdquo; Allows you to include a short text under each page in the list. When no description exists for the page, children shortcode takes the first 70 words of your content. Read more info about summaries on gohugo.io depth 1 Enter a number to specify the depth of descendants to display. For example, if the value is 2, the shortcode will display 2 levels of child pages. Tips: set 999 to get all descendants sort none Sort children by Weight - to sort on menu order, Name - to sort alphabetically on menu label, Identifier - to sort alphabetically on identifier set in frontmatter, and URL - to sort by URL Demo {{% children %}} page 1 page 2 page 3 page test {{% children description=\u0026quot;true\u0026quot; %}} page 1 This is a demo child page\npage 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\npage 3 This is a demo child page\npage test This is a page test\n{{% children depth=\u0026quot;3\u0026quot; showhidden=\u0026quot;true\u0026quot; %}} page 1 page 1-1 page 1-1-1 page 2 page test 3 page 3 page 4 page test {{% children style=\u0026quot;h2\u0026quot; depth=\u0026quot;3\u0026quot; description=\u0026quot;true\u0026quot; %}} page 1 This is a demo child page\npage 1-1 This is a demo child page\npage 1-1-1 This is a demo child page\npage 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\npage test 3 This is a page test\npage 3 This is a demo child page\npage test This is a page test\n{{% children style=\u0026quot;div\u0026quot; depth=\u0026quot;999\u0026quot; %}} page 1 Attachments Button Children page 1 page 1-1 page 1-1-1 page 1-1-1-1 page 1-1-1-1-1 page 2 page test 3 page 3 page test Expand Mermaid Notice Site param Tabbed views page 2 page test 3 page 3 page test "},{"uri":"/zh/shortcodes/expand/","title":"Expand","tags":[],"description":"Displays an expandable/collapsible section of text on your page","content":"The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example\nLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\nUsage this shortcode takes exactly one optional parameter to define the text that appears next to the expand/collapse icon. (default is \u0026ldquo;Expand me\u0026hellip;\u0026rdquo;)\n{{%expand \u0026quot;Is this learn theme rocks ?\u0026quot; %}}Yes !.{{% /expand%}} Is this learn theme rocks ? Yes ! Demo {{%expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. {{% /expand%}} Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"uri":"/zh/shortcodes/mermaid/","title":"Mermaid","tags":[],"description":"Generation of diagram and flowchart from text in a similar manner as markdown","content":"Mermaid is a library helping you to generate diagram and flowcharts from text, in a similar manner as Markdown.\nJust insert your mermaid code in the mermaid shortcode and that\u0026rsquo;s it.\nFlowchart example {{\u0026lt;mermaid align=\u0026quot;left\u0026quot;\u0026gt;}} graph LR; A[Hard edge] --\u0026gt;|Link text| B(Round edge) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result one] C --\u0026gt;|Two| E[Result two] {{\u0026lt; /mermaid \u0026gt;}} renders as\ngraph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Sequence example {{\u0026lt; mermaid \u0026gt;}} sequenceDiagram participant Alice participant Bob Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts \u0026lt;br/\u0026gt;prevail... John--\u0026gt;Alice: Great! John-\u0026gt;Bob: How about you? Bob--\u0026gt;John: Jolly good! {{\u0026lt; /mermaid \u0026gt;}} renders as\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eJohn: Hello John, how are you? loop Healthcheck John-\u003eJohn: Fight against hypochondria end Note right of John: Rational thoughts prevail... John--\u003eAlice: Great! John-\u003eBob: How about you? Bob--\u003eJohn: Jolly good! GANTT Example {{\u0026lt; mermaid \u0026gt;}} gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d {{\u0026lt; /mermaid \u0026gt;}} renders as\ngantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Class example {{\u0026lt; mermaid \u0026gt;}} classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u0026lt;--\u0026gt; C2: Cool label {{\u0026lt; /mermaid \u0026gt;}} renders as\nclassDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : Where am i? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: Cool label Git example {{\u0026lt; mermaid \u0026gt;}} gitGraph: options { \u0026quot;nodeSpacing\u0026quot;: 150, \u0026quot;nodeRadius\u0026quot;: 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch {{\u0026lt; /mermaid\u0026gt;}} renders as\ngitGraph: options { \"nodeSpacing\": 150, \"nodeRadius\": 10 } end commit branch newbranch checkout newbranch commit commit checkout master commit commit merge newbranch State Diagrams {{\u0026lt; mermaid \u0026gt;}} stateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open --\u0026gt; closed: Close closed --\u0026gt; locked: Lock locked --\u0026gt; closed: Unlock closed --\u0026gt; open: Open {{\u0026lt; /mermaid \u0026gt;}} renders as\nstateDiagram-v2 open: Open Door closed: Closed Door locked: Locked Door open --\u003e closed: Close closed --\u003e locked: Lock locked --\u003e closed: Unlock closed --\u003e open: Open "},{"uri":"/zh/shortcodes/notice/","title":"Notice","tags":[],"description":"Disclaimers to help you structure your page","content":"The notice shortcode shows 4 types of disclaimers to help you structure your page.\nNote {{% notice note %}} A notice disclaimer {{% /notice %}} renders as\nA notice disclaimer\nInfo {{% notice info %}} An information disclaimer {{% /notice %}} renders as\nAn information disclaimer\nTip {{% notice tip %}} A tip disclaimer {{% /notice %}} renders as\nA tip disclaimer\nWarning {{% notice warning %}} A warning disclaimer {{% /notice %}} renders as\nA warning disclaimer\n"},{"uri":"/zh/shortcodes/children/children-1/","title":"page 1","tags":[],"description":"This is a demo child page","content":"This is a demo child page\n"},{"uri":"/zh/shortcodes/children/children-1/children-1-1/","title":"page 1-1","tags":[],"description":"This is a demo child page","content":"This is a demo child page\n"},{"uri":"/zh/shortcodes/children/children-1/children-1-1/children-1-1-1/","title":"page 1-1-1","tags":[],"description":"This is a demo child page","content":"This is a demo child page\n"},{"uri":"/zh/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/","title":"page 1-1-1-1","tags":[],"description":"This is a demo child page","content":"This is a demo child page\n"},{"uri":"/zh/shortcodes/children/children-1/children-1-1/children-1-1-1/children-1-1-1-1/children-1-1-1-1-1/","title":"page 1-1-1-1-1","tags":[],"description":"This is a demo child page","content":"This is a demo child page\n"},{"uri":"/zh/shortcodes/children/children-2/","title":"page 2","tags":[],"description":"","content":"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n"},{"uri":"/zh/shortcodes/children/children-3/","title":"page 3","tags":[],"description":"This is a demo child page","content":"This is a demo child page, not displayed in the menu\n"},{"uri":"/zh/shortcodes/children/children-4/","title":"page 4","tags":[],"description":"This is a demo child page","content":"This is a demo child page, not displayed in the menu\n"},{"uri":"/zh/shortcodes/children/test/","title":"page test","tags":[],"description":"This is a page test","content":"This is a test demo child page\n"},{"uri":"/zh/shortcodes/children/children-2/test3/","title":"page test 3","tags":[],"description":"This is a page test","content":"This is a test 3 demo child page\n"},{"uri":"/zh/showcase/","title":"Showcase","tags":[],"description":"","content":"TAT by OVH Tshark.dev by Ross Jacobs inteliver by Amir Lavasani "},{"uri":"/zh/shortcodes/siteparam/","title":"Site param","tags":[],"description":"Get value of site params variables in your page.","content":"siteparam shortcode is used to help you print values of site params.\nFor instance, in this current site, the editURL variable is used in config.toml\n[params] editURL = \u0026#34;https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\u0026#34; Use the siteparam shortcode to display its value.\n`editURL` Value : {{% siteparam \u0026#34;editURL\u0026#34; %}} is displayed as\neditURL Value : https://github.com/matcornic/hugo-theme-learn/edit/master/exampleSite/content/\n"},{"uri":"/zh/shortcodes/tabs/","title":"Tabbed views","tags":[],"description":"Synchronize selection of content in different tabbed views","content":"Choose which content to see across the page. Very handy for providing code snippets for multiple languages or providing configuration in different formats.\nCode example {{\u0026lt; tabs \u0026gt;}} {{% tab name=\u0026quot;python\u0026quot; %}} ```python print(\u0026quot;Hello World!\u0026quot;) ``` {{% /tab %}} {{% tab name=\u0026quot;R\u0026quot; %}} ```R \u0026gt; print(\u0026quot;Hello World!\u0026quot;) ``` {{% /tab %}} {{% tab name=\u0026quot;Bash\u0026quot; %}} ```Bash echo \u0026quot;Hello World!\u0026quot; ``` {{% /tab %}} {{\u0026lt; /tabs \u0026gt;}} Renders as:\npython R Bash print(\u0026#34;Hello World!\u0026#34;) \u0026gt; print(\u0026#34;Hello World!\u0026#34;) echo \u0026#34;Hello World!\u0026#34; Tab views with the same tabs that belong to the same group sychronize their selection:\npython R Bash print(\u0026#34;Hello World!\u0026#34;) \u0026gt; print(\u0026#34;Hello World!\u0026#34;) echo \u0026#34;Hello World!\u0026#34; Config example {{\u0026lt; tabs groupId=\u0026quot;config\u0026quot; \u0026gt;}} {{% tab name=\u0026quot;json\u0026quot; %}} ```json { \u0026quot;Hello\u0026quot;: \u0026quot;World\u0026quot; } ``` {{% /tab %}} {{% tab name=\u0026quot;XML\u0026quot; %}} ```xml \u0026lt;Hello\u0026gt;World\u0026lt;/Hello\u0026gt; ``` {{% /tab %}} {{% tab name=\u0026quot;properties\u0026quot; %}} ```properties Hello = World ``` {{% /tab %}} {{\u0026lt; /tabs \u0026gt;}} Renders as:\njson XML properties { \u0026#34;Hello\u0026#34;: \u0026#34;World\u0026#34; } \u0026lt;Hello\u0026gt;World\u0026lt;/Hello\u0026gt; Hello = World When using tab views with different content sets, make sure to use a common groupId for equal sets but distinct groupId for different sets. The groupId defaults to 'default'.\nTake this into account across the whole site!\nThe tab selection is restored automatically based on the groupId and if it cannot find a tab item because it came from the 'default' group on a different page then all tabs will be empty at first.\n"}]